generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String       @id @default(uuid())
  name           String
  email          String       @unique
  password       String
  UserAccess     UserAccess[]
  Access         Access?      @relation(fields: [accessId], references: [id])
  accessId       String?
  Store          Store[]
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  sale_as_buyer  Sale[]       @relation("buyer")
  sale_as_saller Sale[]       @relation("saller")
}

model UserAccess {
  id         String   @id @default(uuid())
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
  Access     Access?  @relation(fields: [accessId], references: [id])
  accessId   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Access {
  id         String       @id @default(uuid())
  name       String       @unique
  UserAccess UserAccess[]
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  User       User[]
}

model Product {
  id          String        @id @default(uuid())
  name        String
  price       Float
  amout       Int
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  Store       Store?        @relation(fields: [storeId], references: [id])
  storeId     String?
  SaleProduct SaleProduct[]
}

model Store {
  id         String    @id @default(uuid())
  name       String
  product    Product[]
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Sale {
  id          String        @id @default(uuid())
  total_value Float
  Buyer       User?         @relation("buyer", fields: [buyerId], references: [id])
  buyerId     String?
  Saller      User?         @relation("saller", fields: [sellerId], references: [id])
  sellerId    String?
  SaleProduct SaleProduct[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
}

model SaleProduct {
  id         String   @id @default(uuid())
  quantity   Int
  Sale       Sale     @relation(fields: [saleId], references: [id])
  saleId     String
  Product    Product  @relation(fields: [productId], references: [id])
  productId  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
